/*
 * jQuery One Page Nav Plugin
 * http://github.com/davist11/jQuery-One-Page-Nav
 *
 * Copyright (c) 2010 Trevor Davis (http://trevordavis.net)
 * Dual licensed under the MIT and GPL licenses.
 * Uses the same license as jQuery, see:
 * http://jquery.org/license
 *
 * @version 2.2.0
 *
 * Example usage:
 * $('#nav').onePageNav({
 *   currentClass: 'current',
 *   changeHash: false,
 *   scrollSpeed: 750
 * });
 */

;(function($, window, document, undefined){

	// our plugin constructor
	var OnePageNav = function(elem, options){
		this.elem = elem;
		this.$elem = $(elem);
		this.options = options;
		this.metadata = this.$elem.data('plugin-options');
		this.$nav = this.$elem.find('a');
		this.$win = $(window);
		this.sections = {};
		this.didScroll = false;
		this.$doc = $(document);
		this.docHeight = this.$doc.height();
	};

	// the plugin prototype
	OnePageNav.prototype = {
		defaults: {
			currentClass: 'current',
			changeHash: false,
			easing: 'swing',
			filter: '',
			scrollSpeed: 750,
			scrollOffset: 0,
			scrollThreshold: 0.5,
			begin: false,
			end: false,
			scrollChange: false
		},

		init: function() {
			var self = this;
			
			// Introduce defaults that can be extended either
			// globally or using an object literal.
			self.config = $.extend({}, self.defaults, self.options, self.metadata);
			
			//Filter any links out of the nav
			if(self.config.filter !== '') {
				self.$nav = self.$nav.filter(self.config.filter);
			}
			
			//Handle clicks on the nav
			self.$nav.on('click.onePageNav', $.proxy(self.handleClick, self));

			//Get the section positions
			self.getPositions();
			
			//Handle scroll changes
			self.bindInterval();
			
			//Update the positions on resize too
			self.$win.on('resize.onePageNav', $.proxy(self.getPositions, self));

			return this;
		},
		
		 
		scrollChange: function() {
			var windowTop = this.$win.scrollTop();
			var position = this.getSection(windowTop);
			var $parent;
			
			//If the position is set
			if(position !== null) {
				$parent = this.$elem.find('a[href$="#' + position + '"]').parent();
				
				//If it's not already the current section
				if(!$parent.hasClass(this.config.currentClass)) {
					//Change the highlighted nav item
					this.adjustNav(this, $parent);
					
					//If there is a scrollChange callback
					if(this.config.scrollChange) {
						this.config.scrollChange($parent);
					}
				}
			}
		},
		
		unbindInterval: function() {
			clearInterval(this.t);
			this.$win.unbind('scroll.onePageNav');
		}
	};

	OnePageNav.defaults = OnePageNav.prototype.defaults;

	$.fn.onePageNav = function(options) {
		return this.each(function() {
			new OnePageNav(this, options).init();
		});
	};
	
})( jQuery, window , document );

 $(document).ready(function(e) {
	 /* $(document).on('click', "a.readmore", function() {    
 		$(".more_cont").slideToggle();$(this).toggleClass("more");
		 
	});*/
	
	
	
	jQuery(function( $ ){

   $(window).scroll(function(){
	   var screenHeight = $(window).height();
			if($(this).scrollTop() > screenHeight) {
				$("#top-nav li.current").css({"padding-bottom":"14px"});
	/*	$(".top_border").css({"top":"-100px"});
		$(".logo").css({"background":"none", "top":"-201px"});
		$(".main_logo").css({"bottom":"-9px"});
		$(".menu-bar").css({"top":"0"});*/
	}else{
		
		$("#top-nav li.current").css({"padding-bottom":"23px"});
	/*$(".top_border").css({"top":"0"});	
	$(".logo").css({"background":"url('images/logo-bg.png')", "background-size":"97% auto", "-webkit-background-size":"97% auto", "-moz-background-size":"97% auto", "-ms-background-size":"97% auto", "-o-background-size":"97% auto", "top":"-110px"});
	$(".menu-bar").css({"top":"15px"});
	$(".main_logo").css({"bottom":"43px"});*/
	
	}

   });

});
	
	
	
	  
});
  
  
$(document).ready(function(){

function getIEVersion(){
    var agent = navigator.userAgent;
    var reg = /MSIE\s?(\d+)(?:\.(\d+))?/i;
    var matches = agent.match(reg);
    if (matches != null) {
        return { major: matches[1], minor: matches[2] };
    }
    return { major: "-1", minor: "-1" };
}

var ie_version =  getIEVersion();
var is_ie10 = ie_version.major == 10;


if(is_ie10) {
$("body").addClass("ie10");
 }
 if(ie_version) {
 $("body").addClass("ie"+ie_version);
 }
		
        
				   });
  